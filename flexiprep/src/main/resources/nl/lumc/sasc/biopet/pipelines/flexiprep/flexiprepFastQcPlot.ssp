#import(nl.lumc.sasc.biopet.utils.summary.db.Schema.Run)
#import(nl.lumc.sasc.biopet.utils.summary.db.SummaryDb)
#import(nl.lumc.sasc.biopet.utils.summary.db.SummaryDb._)
#import(nl.lumc.sasc.biopet.utils.summary.db.SummaryDb.Implicts._)
#import(nl.lumc.sasc.biopet.core.report.ReportPage)
#import(scala.concurrent.Await)
#import(scala.concurrent.duration.Duration)
#import(nl.lumc.sasc.biopet.core.report.ReportPage)
#import(org.apache.commons.io.FileUtils)
#import(java.io.File)
#import(nl.lumc.sasc.biopet.core.report.ReportBuilder.ec)
<%@ var summary: SummaryDb %>
<%@ var runId: Int %>
<%@ var run: Run %>
<%@ var sampleId: Option[Int] %>
<%@ var libId: Option[Int] %>
<%@ var plot: String %>
<%@ var outputDir: File %>
#{
    val settings = summary.getSettingKeys(runId, "flexiprep", NoModule, SampleId(sampleId.get), LibraryId(libId.get), keyValues = Map(
    "skip_trim" -> List("skip_trim"), "skip_clip" -> List("skip_clip"), "paired" -> List("paired")))
    val run = Await.result(summary.getRuns(runId = Some(runId)).map(_.head), Duration.Inf)

    val paired: Boolean = settings("paired").contains(true)
    val skipClip: Boolean = settings("skip_clip").contains(true)
    val skipTrim: Boolean = settings("skip_trim").contains(true)

    def getPlot(read:String) = {
        val file = Await.result(summary.getFile(runId, "flexiprep", read, SampleId(sampleId.get), LibraryId(libId.get), plot), Duration.Inf)
        file.collect {
            case path =>
                val file = new File(run.outputDir + File.separator + path.path)
                val newFile = new File(outputDir, read + "_" + file.getName)
                if (file.exists()) FileUtils.copyFile(file, newFile)
                newFile.getName
        }
    }

    def plotAvailable(read:String) = {
        val file = Await.result(summary.getFile(runId, "flexiprep", read, SampleId(sampleId.get), LibraryId(libId.get), plot), Duration.Inf)
        file.exists(x => new File(run.outputDir + File.separator + x.path).exists())
    }

}#

<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-5"><b>Before QC</b></div>
    #if (!skipTrim || !skipClip) <div class="col-md-5"><b>After QC</b></div> #end
</div>
<div class="row">
    <div class="col-md-1"><b>R1</b></div>
    <div class="col-md-5">
    #if (plotAvailable( "fastqc_R1" ))
        <img class="img-responsive" src="${getPlot("fastqc_R1")}" />
    #else
        Image was not generated by FastQC
    #end
    </div>
    #if (!skipTrim || !skipClip)
    <div class="col-md-5">
    #if (plotAvailable( "fastqc_R1_qc" ))
        <img class="img-responsive" src="${getPlot("fastqc_R1_qc")}" />
    #else
        Image was not generated by FastQC
    #end
    </div>
     #end
</div>
#if (paired)
    <div class="row">
        <div class="col-md-1"><b>R2</b></div>
        <div class="col-md-5">
        #if (plotAvailable( "fastqc_R2" ))
            <img class="img-responsive" src="${getPlot("fastqc_R2")}" />
        #else
            Image was not generated by FastQC
        #end
        </div>
        #if (!skipTrim || !skipClip)
        <div class="col-md-5">
        #if (plotAvailable( "fastqc_R2_qc" ))
            <img class="img-responsive" src="${getPlot("fastqc_R2_qc")}" />
        #else
            Image was not generated by FastQC
        #end
        </div>
         #end
    </div>
#end
