<?xml version="1.0" encoding="UTF-8"?>
<!--

    Biopet is built on top of GATK Queue for building bioinformatic
    pipelines. It is mainly intended to support LUMC SHARK cluster which is running
    SGE. But other types of HPC that are supported by GATK Queue (such as PBS)
    should also be able to execute Biopet tools and pipelines.

    Copyright 2014 Sequencing Analysis Support Core - Leiden University Medical Center

    Contact us at: sasc@lumc.nl

    A dual licensing mode is applied. The source code within this project is freely available for non-commercial use under an AGPL
    license; For commercial users or users who do not want to follow the AGPL
    license, please contact us to obtain a separate license.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--TODO: replace groupId -->
    <groupId>org.example.group</groupId>

    <!--TODO: replace artifactId -->
    <artifactId>ExternalExample</artifactId>

    <!--TODO: replace version, for a new pipeline it's advised to start with '0.1.0-SNAPSHOT' -->
    <version>0.9.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scoverage.plugin.version>1.0.4</scoverage.plugin.version>
        <sting.shade.phase>package</sting.shade.phase>

        <!--
        TODO: replace app.main.class, this is the class that get executed when running the jar file
        This can be any executable that have a main method. In Biopet any pipeline can be used as direct executable.
        Value for direct pipeline: 'org.example.group.pipelines.SimplePipeline'
        In the given example is an extension of the biopet executable. In this example there are multiple pipelines in 1 executable.

        It's also possible to make your own main function and call the main function with it's argument of the pipeline from there.
        -->
        <app.main.class>org.example.group.ExecutableExample</app.main.class>
    </properties>

    <dependencies>
        <!--
        In here maven dependencies can be placed, when importing a biopet pipeline 'Biopet-Framework' is not required.
        When only using the framework without pipeline you need to import BiopetFramework.
        It's advised to not use different versions of the pipeline and the framework.
         -->
        <dependency>
            <groupId>nl.lumc.sasc</groupId>
            <artifactId>BiopetCore</artifactId>

            <!--TODO: replace version of pipeline to a fixed version -->
            <version>0.10.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>nl.lumc.sasc</groupId>
            <artifactId>BiopetExtensions</artifactId>
            <version>0.10.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>nl.lumc.sasc</groupId>
            <artifactId>Shiva</artifactId>

            <!--TODO: replace version of pipeline to a fixed version -->
            <version>0.10.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
        <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <!--suppress MavenModelInspection -->
                    <finalName>${project.artifactId}-${project.version}-${git.commit.id.abbrev}</finalName>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class>${app.main.class}</Main-Class>
                                <!--suppress MavenModelInspection -->
                                <X-Compile-Source-JDK>${maven.compile.source}</X-Compile-Source-JDK>
                                <!--suppress MavenModelInspection -->
                                <X-Compile-Target-JDK>${maven.compile.target}</X-Compile-Target-JDK>
                            </manifestEntries>
                        </transformer>
                    </transformers>
                    <filters>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <forkCount>1C</forkCount>
                    <workingDirectory>${project.build.directory}</workingDirectory>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-installed</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>list</goal>
                        </goals>
                        <configuration>
                            <outputFile>${project.build.outputDirectory}/dependency_list.txt</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
                <!-- ... (see other usage or goals for details) ... -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <prefix>git</prefix>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <verbose>false</verbose>
                    <!-- TODO: This directory need to be changed depening where your .git folder is relative from this pom.xml -->
                    <dotGitDirectory>${basedir}/../.git</dotGitDirectory>
                    <useNativeGit>true</useNativeGit>
                    <skipPoms>false</skipPoms>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <abbrevLength>8</abbrevLength>
                    <skip>false</skip>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <abbrev>8</abbrev>
                        <dirty>-dirty</dirty>
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <excludes>
                        <exclude>**/*git*</exclude>
                        <exclude>**/License*</exclude>
                        <exclude>**/*.bam</exclude>
                        <exclude>**/*.bai</exclude>
                        <exclude>**/*.gtf</exclude>
                        <exclude>**/*.fq</exclude>
                        <exclude>**/*.sam</exclude>
                        <exclude>**/*.bed</exclude>
                        <exclude>**/*.refFlat</exclude>
                        <exclude>**/*.R</exclude>
                        <exclude>**/*.rscript</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
                <configuration>
                    <scalaVersion>2.10.2</scalaVersion>
                    <!-- other parameters -->
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
                <version>${scoverage.plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>
</project>